<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<bean id="customAccessDenied" class="com.board.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="com.board.security.CustomLoginSuccessHandler" ></bean>
	<bean id="customLoginFailure" class="com.board.security.CustomLoginFailureHandler" ></bean>
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />	
	
	<!-- 
		auto-config = true
			로그인페이지, HTTP 기본인증, 로그아웃 기능 제공.
			default값은 false.
		
		use-expressions = true
			SpEL을 사용함. 
			default값은 false.
			SpEL을 사용하도록 설정했다면 반드시 SpEL을 사용해서 작성해야 한다.
			
		resources 폴더 안에 있는 파일들은 security 설정에 영향을 받지 않도록 설정해야
		해당 경로의 css 파일들이 적용된다.
	 -->
	 
	 <security:http pattern="/resources/**" security="none"></security:http>
	
	<security:http auto-config="true" use-expressions="true">
	
		<security:intercept-url pattern="/**" access="permitAll" />
		
		<!-- <security:intercept-url pattern="/users/signup" access="permitAll" />
		
		<security:intercept-url pattern="/users/login" access="permitAll" />
		
		<security:intercept-url pattern="/users/logout" access="permitAll" /> -->
		
		<security:csrf disabled="true"/>
	
		
		<security:access-denied-handler ref="customAccessDenied" />
	
		<security:form-login
			login-page="/users/login"
			login-processing-url="/users/login"
			username-parameter="userId"
			password-parameter="userPwd"
			authentication-success-handler-ref="customLoginSuccess"
			authentication-failure-handler-ref="customLoginFailure"
		/>
		
		<!-- 로그아웃 설정 -->
		<security:logout
			logout-url="/users/logout"
			logout-success-url="/"
			invalidate-session="true"
			delete-cookies="JSESSIONID"
		/>
		
		<!-- 
			중복 로그인 방지 설정
			최대 한 개의 세션만 생성되도록 설정 
			
			invalid-session-url : 세션이 끊겼을때 이동할 페이지
			max-sessions : 중복 로그인이 가능한 세션 수
			expired-url : 중복 로그인 발생 시 먼저 로그인한 세션이 끊어지고 끊어진 상태에서 모든 url을 호출할 경우
			끊어진 원인을 알려줄 주소를 지정
			error-if-maximum-exceeded : 원래 먼저 로그인한 사용자의 세션이 끊어지지만 true로 설정할 경우 첫번째
			로그인이 아닌 세션이 살아 있는 상태에서의 로그인은 거부된다
		-->
		<security:session-management invalid-session-url="/">
			<security:concurrency-control 
				max-sessions="1"
				expired-url="/"
				error-if-maximum-exceeded="true"
			/>
		</security:session-management>
		
	</security:http>
	
	<security:authentication-manager>
	
		<security:authentication-provider>
		
			<security:password-encoder hash="bcrypt"/>
			<security:jdbc-user-service 
				data-source-ref="dataSource"
				users-by-username-query="SELECT user_id as userId, user_pwd as userPwd, user_enabled FROM site_user WHERE user_id = ?"
				authorities-by-username-query="SELECT user_id, user_pwd, user_auth FROM site_user WHERE user_id = ?"
			/>
			
			<security:password-encoder ref="bcryptPasswordEncoder" />
		
		</security:authentication-provider>
	
	</security:authentication-manager>
	
</beans>
